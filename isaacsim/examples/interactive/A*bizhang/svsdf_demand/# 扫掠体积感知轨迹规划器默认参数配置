# config/default_params.yaml
# 扫掠体积感知轨迹规划器默认参数配置

# 机器人参数
robot:
  # 几何参数
  geometry:
    length: 0.6           # 机器人长度 (m)
    width: 0.4            # 机器人宽度 (m)
    height: 0.2           # 机器人高度 (m) - 用于可视化
    wheel_base: 0.3       # 轮距 (m)
    wheel_radius: 0.05    # 车轮半径 (m)
  
  # 运动约束
  kinematics:
    max_linear_velocity: 1.0      # 最大线速度 (m/s)
    max_angular_velocity: 1.5     # 最大角速度 (rad/s)
    max_linear_acceleration: 2.0  # 最大线加速度 (m/s²)
    max_angular_acceleration: 3.0 # 最大角加速度 (rad/s²)
    max_linear_jerk: 5.0          # 最大线加加速度 (m/s³)
    max_angular_jerk: 8.0         # 最大角加加速度 (rad/s³)
  
  # 安全参数
  safety:
    collision_radius: 0.35        # 碰撞检测半径 (m)
    safety_margin: 0.2            # 安全距离 (m)
    emergency_brake_distance: 0.5 # 紧急制动距离 (m)

# 轨迹规划参数
trajectory_planning:
  # A*路径搜索参数
  astar:
    grid_resolution: 0.1          # 网格分辨率 (m)
    heuristic_weight: 1.0         # 启发式权重
    tie_breaker: 0.001            # 打破平局的小扰动
    max_iterations: 10000         # 最大迭代次数
    connection_radius: 0.3        # 连接半径 (m)
  
  # MINCO轨迹优化参数
  minco:
    # 轨迹段数
    num_segments: 8               # 轨迹段数量
    polynomial_order: 5           # 多项式阶数
    
    # 第一阶段优化权重
    stage1_weights:
      energy: 1.0                 # 能量权重 W_E
      time: 1.0                   # 时间权重 W_T
      path_deviation: 100.0       # 路径偏差权重 W_P
    
    # 第二阶段优化权重  
    stage2_weights:
      energy: 1.0                 # 能量权重 W_E
      time: 1.0                   # 时间权重 W_T
      obstacle: 10000.0           # 障碍物权重 W_ob
      swept_volume: 1000.0        # 扫掠体积权重 W_sv
    
    # 优化器参数
    optimizer:
      max_iterations: 100         # 最大迭代次数
      tolerance: 1e-6             # 收敛容差
      line_search_max_iter: 20    # 线搜索最大迭代
      gradient_tolerance: 1e-8    # 梯度容差
      
    # 时间分配
    time_allocation:
      min_segment_time: 0.5       # 最小段时间 (s)
      max_segment_time: 5.0       # 最大段时间 (s)
      initial_speed_factor: 0.7   # 初始速度因子

# MPC控制器参数
mpc_controller:
  # 时域参数
  horizons:
    prediction_horizon: 20        # 预测时域 N_p
    control_horizon: 10           # 控制时域 N_c
    sample_time: 0.1              # 采样时间 (s)
  
  # 权重矩阵
  weights:
    # 状态权重 Q = diag(q_x, q_y, q_theta)
    state_weights: [10.0, 10.0, 5.0]
    # 控制权重 R = diag(r_v, r_omega)  
    control_weights: [1.0, 1.0]
    # 终端权重 Q_f = diag(qf_x, qf_y, qf_theta)
    terminal_weights: [20.0, 20.0, 10.0]
  
  # 约束参数
  constraints:
    # 控制输入约束
    control_bounds:
      linear_velocity: [-1.0, 1.0]     # 线速度范围 (m/s)
      angular_velocity: [-1.5, 1.5]    # 角速度范围 (rad/s)
    
    # 控制增量约束
    control_rate_bounds:
      linear_acceleration: [-2.0, 2.0] # 线加速度范围 (m/s²)
      angular_acceleration: [-3.0, 3.0] # 角加速度范围 (rad/s²)
  
  # QP求解器参数
  qp_solver:
    solver_type: "osqp"           # 求解器类型: osqp, qpoases, custom
    max_iterations: 1000          # 最大迭代次数
    tolerance: 1e-6               # 求解精度
    warm_start: true              # 热启动
    polish: true                  # 解优化
    adaptive_rho: true            # 自适应步长

# SDF计算参数
sdf_calculator:
  # 网格参数
  grid:
    resolution: 0.05              # SDF网格分辨率 (m)
    expansion_margin: 2.0         # 网格扩展边界 (m)
    
  # 扫掠体积计算
  swept_volume:
    armijo_c1: 1e-4               # Armijo条件参数
    armijo_alpha: 0.5             # 步长缩减因子
    max_armijo_iterations: 50     # 最大线搜索迭代
    time_discretization: 0.05     # 时间离散化间隔 (s)
    
  # 蒙特卡洛估算
  monte_carlo:
    num_samples: 10000            # 采样点数量
    random_seed: 42               # 随机种子
    
  # 并行计算
  parallel:
    use_openmp: true              # 使用OpenMP
    num_threads: 0                # 线程数量 (0=自动)
    use_cuda: true                # 使用CUDA
    cuda_block_size: 256          # CUDA块大小

# 环境和障碍物参数
environment:
  # 地图边界
  bounds:
    x_min: -10.0                  # X轴最小值 (m)
    x_max: 10.0                   # X轴最大值 (m)  
    y_min: -10.0                  # Y轴最小值 (m)
    y_max: 10.0                   # Y轴最大值 (m)
  
  # 障碍物检测
  obstacle_detection:
    detection_radius: 5.0         # 检测半径 (m)
    min_obstacle_size: 0.1        # 最小障碍物尺寸 (m)
    inflation_radius: 0.1         # 膨胀半径 (m)

# 性能参数
performance:
  # 计算资源
  computation:
    max_planning_time: 5.0        # 最大规划时间 (s)
    max_control_time: 0.01        # 最大控制计算时间 (s)
    memory_limit_mb: 1024         # 内存限制 (MB)
  
  # 质量指标
  quality_metrics:
    max_position_error: 0.1       # 最大位置误差 (m)
    max_orientation_error: 0.1    # 最大姿态误差 (rad)
    smoothness_threshold: 1.0     # 平滑度阈值
    
# 调试和可视化
debug:
  # 日志设置
  logging:
    level: "INFO"                 # 日志级别: DEBUG, INFO, WARN, ERROR
    log_to_file: false            # 记录到文件
    log_file_path: "planner.log"  # 日志文件路径
    
  # 可视化
  visualization:
    enable: true                  # 启用可视化
    trajectory_points: true       # 显示轨迹点
    robot_poses: true             # 显示机器人姿态
    swept_volume: true            # 显示扫掠体积
    obstacles: true               # 显示障碍物
    velocity_profile: true        # 显示速度曲线
    
  # 性能分析
  profiling:
    enable_timing: true           # 启用计时
    detailed_timing: false        # 详细计时信息
    memory_profiling: false       # 内存分析
    
# 实验配置
experiments:
  # 基准测试
  benchmark:
    num_runs: 10                  # 运行次数
    scenarios: ["simple", "complex", "narrow_passage"]
    
  # 对比算法
  comparison_methods:
    - name: "traditional_astar"
      enabled: true
    - name: "rrt_star"  
      enabled: false
    - name: "hybrid_astar"
      enabled: false

---
# config/robot_models.yaml
# 不同机器人模型的参数配置

# 小型扫地机器人
cleaning_robot:
  geometry:
    length: 0.35
    width: 0.35
    height: 0.1
    wheel_base: 0.25
    wheel_radius: 0.04
  kinematics:
    max_linear_velocity: 0.5
    max_angular_velocity: 1.0
    max_linear_acceleration: 1.0
    max_angular_acceleration: 2.0
  safety:
    collision_radius: 0.2
    safety_margin: 0.15

# 中型配送机器人  
delivery_robot:
  geometry:
    length: 0.8
    width: 0.6
    height: 1.2
    wheel_base: 0.5
    wheel_radius: 0.1
  kinematics:
    max_linear_velocity: 2.0
    max_angular_velocity: 1.2
    max_linear_acceleration: 1.5
    max_angular_acceleration: 2.5
  safety:
    collision_radius: 0.5
    safety_margin: 0.3

# 大型工业AGV
industrial_agv:
  geometry:
    length: 1.5
    width: 1.0
    height: 0.4
    wheel_base: 1.0
    wheel_radius: 0.15
  kinematics:
    max_linear_velocity: 1.5
    max_angular_velocity: 0.8
    max_linear_acceleration: 1.0
    max_angular_acceleration: 1.5
  safety:
    collision_radius: 0.8
    safety_margin: 0.5

# 紧凑型机器人（用于狭窄空间）
compact_robot:
  geometry:
    length: 0.4
    width: 0.25
    height: 0.15
    wheel_base: 0.2
    wheel_radius: 0.03
  kinematics:
    max_linear_velocity: 0.3
    max_angular_velocity: 1.5
    max_linear_acceleration: 0.8
    max_angular_acceleration: 3.0
  safety:
    collision_radius: 0.15
    safety_margin: 0.1

---
# config/scenarios.yaml  
# 测试场景配置

# 简单开放环境
simple_open:
  name: "简单开放环境"
  description: "无障碍物的开放空间测试"
  environment:
    bounds: [-5, 5, -5, 5]
    obstacles: []
  start_pose: [0, 0, 0]
  goal_pose: [4, 3, 1.57]
  
# 单一障碍物
single_obstacle:
  name: "单一障碍物"
  description: "绕过单个圆形障碍物"
  environment:
    bounds: [-3, 7, -2, 5]
    obstacles:
      - type: "circle"
        center: [2.5, 1.5]
        radius: 0.8
  start_pose: [0, 0, 0]
  goal_pose: [5, 3, 0]

# 多障碍物环境
multi_obstacles:
  name: "多障碍物环境"
  description: "复杂多障碍物环境导航"
  environment:
    bounds: [-2, 8, -2, 6]
    obstacles:
      - type: "circle"
        center: [2, 1]
        radius: 0.5
      - type: "circle"
        center: [4, 3]
        radius: 0.4
      - type: "circle" 
        center: [6, 2]
        radius: 0.6
      - type: "rectangle"
        center: [3, 4.5]
        size: [1.0, 0.4]
        orientation: 0.5
  start_pose: [0, 0, 0]
  goal_pose: [7, 4, 1.57]

# 狭窄通道
narrow_passage:
  name: "狭窄通道"
  description: "需要精确规划的狭窄通道"
  environment:
    bounds: [-1, 6, -1, 4]
    obstacles:
      - type: "rectangle"
        center: [2, 1.2]
        size: [3, 0.3]
        orientation: 0
      - type: "rectangle"
        center: [2, 2.8]
        size: [3, 0.3] 
        orientation: 0
  start_pose: [0, 2, 0]
  goal_pose: [4.5, 2, 0]
  passage_width: 0.8  # 通道宽度

# 迷宫环境
maze_environment:
  name: "迷宫环境"
  description: "复杂迷宫导航测试"
  environment:
    bounds: [0, 10, 0, 10]
    obstacles:
      # 外墙
      - type: "rectangle"
        center: [5, 0]
        size: [10, 0.2]
      - type: "rectangle"
        center: [5, 10]
        size: [10, 0.2]
      - type: "rectangle"
        center: [0, 5]
        size: [0.2, 10]
      - type: "rectangle"
        center: [10, 5]
        size: [0.2, 10]
      # 内部墙体
      - type: "rectangle"
        center: [3, 3]
        size: [0.2, 4]
      - type: "rectangle"
        center: [7, 7]
        size: [4, 0.2]
      - type: "rectangle"
        center: [5, 1.5]
        size: [0.2, 3]
  start_pose: [1, 1, 0]
  goal_pose: [9, 9, 0]

# U型转弯
u_turn:
  name: "U型转弯"
  description: "测试大转弯角度的扫掠体积优化"
  environment:
    bounds: [-2, 6, -1, 4]
    obstacles:
      - type: "rectangle"
        center: [2, 0.5]
        size: [4, 0.3]
      - type: "rectangle"
        center: [2, 3.5]
        size: [4, 0.3]
      - type: "rectangle"
        center: [4.2, 2]
        size: [0.3, 3]
  start_pose: [0, 2, 0]
  goal_pose: [0, 2, 3.14]  # 180度转向

# 动态障碍物（仿真用）
dynamic_obstacles:
  name: "动态障碍物"
  description: "包含移动障碍物的环境"
  environment:
    bounds: [-3, 8, -2, 5]
    static_obstacles:
      - type: "circle"
        center: [6, 3]
        radius: 0.4
    dynamic_obstacles:
      - type: "circle"
        initial_center: [2, 1]
        radius: 0.3
        velocity: [0.5, 0.2]  # [vx, vy]
        trajectory_type: "linear"
      - type: "circle"
        initial_center: [4, 4]
        radius: 0.25
        center_trajectory: [[4, 4], [4, 2], [6, 2], [6, 4]]
        trajectory_type: "cyclic"
        period: 8.0
  start_pose: [0, 0, 0]
  goal_pose: [7, 2, 1.57]

---
# config/optimization_profiles.yaml
# 不同应用场景的优化配置

# 高速场景（优先时间）
high_speed_profile:
  name: "高速模式"
  description: "优先考虑时间效率"
  minco:
    stage2_weights:
      energy: 0.5
      time: 10.0      # 增加时间权重
      obstacle: 5000.0
      swept_volume: 500.0  # 降低扫掠体积权重
  robot:
    kinematics:
      max_linear_velocity: 1.5    # 提高速度限制
      max_angular_velocity: 2.0

# 安全模式（优先安全性）
safety_profile:
  name: "安全模式"
  description: "优先考虑安全性和扫掠体积最小化"
  minco:
    stage2_weights:
      energy: 1.0
      time: 0.5       # 降低时间权重
      obstacle: 20000.0  # 大幅增加障碍物权重
      swept_volume: 2000.0  # 增加扫掠体积权重
  robot:
    safety:
      safety_margin: 0.3  # 增加安全距离
      collision_radius: 0.4

# 节能模式（优先能耗）
energy_efficient_profile:
  name: "节能模式"
  description: "优先考虑能量效率"
  minco:
    stage2_weights:
      energy: 5.0      # 大幅增加能量权重
      time: 0.8
      obstacle: 10000.0
      swept_volume: 1000.0
  robot:
    kinematics:
      max_linear_velocity: 0.8    # 降低速度限制
      max_angular_velocity: 1.0
      max_linear_acceleration: 1.5

# 精确模式（狭小空间）
precision_profile:
  name: "精确模式"  
  description: "适用于狭小空间的精确导航"
  minco:
    num_segments: 12    # 增加轨迹段数
    stage2_weights:
      energy: 1.0
      time: 1.0
      obstacle: 15000.0
      swept_volume: 3000.0  # 极高的扫掠体积权重
  sdf_calculator:
    grid:
      resolution: 0.02  # 提高分辨率
    swept_volume:
      time_discretization: 0.02  # 更精细的时间离散化
